# 配置logger信息。必须包含一个名字叫做root的logger，当使用无参函数logging.getLogger()时，默认返回root这个logger，
# 其他自定义logger可以通过如 logging.getLogger("fileAndConsole") 方式进行调用
[loggers]
keys=root,file,fileAndConsole,test,testTR

# 定义声明handlers信息。
[handlers]
keys=fileHandler,consoleHandler,testHandler,testTimedRotatingFileHandler

# 设置日志格式
[formatters]
keys=simpleFormatter,testFormatter


# 对loggers中声明的logger进行逐个配置，且要一一对应,在所有的logger中，必须指定level和handlers这两个选项，
# 对于非roothandler，还需要添加一些额外的option，
# 其中qualname表示它在logger层级中的名字，在应用代码中通过这个名字指定所使用的handler，即 logging.getLogger("fileAndConsole")，
# handlers可以指定多个，中间用逗号隔开，比如handlers=fileHandler,consoleHandler，同时指定使用控制台和文件输出日志
[logger_root]
level=DEBUG
handlers=consoleHandler

[logger_file]
level=DEBUG
handlers=fileHandler
qualname=file
propagate=1

[logger_fileAndConsole]
level=DEBUG
handlers=fileHandler,consoleHandler
qualname=fileAndConsole
propagate=0

[logger_test]
level=DEBUG
handlers=testHandler
qualname=test
propagate=0

[logger_testTR]
level=DEBUG
handlers=testTimedRotatingFileHandler
qualname=testTR
propagate=0

# 在handler中，必须指定class和args这两个option，常用的class包括
#   StreamHandler（仅将日志输出到控制台）、
#   FileHandler（将日志信息输出保存到文件）、
#   RotaRotatingFileHandler（将日志输出保存到文件中，并设置单个日志文件的大小和日志文件个数），
#
# args表示传递给class所指定的handler类初始化方法参数，它必须是一个元组（tuple）的形式，
#   即便只有一个参数值也需要是一个元组的形式；里面指定输出路径，比如输出的文件名称等。
#
# level与logger中的level一样，
#
# 而formatter指定的是该处理器所使用的格式器，这里指定的格式器名称必须出现在formatters这个section中，且在配置文件中必须要有这个formatter的section定义；
# 如果不指定formatter则该handler将会以消息本身作为日志消息进行记录，而不添加额外的时间、日志器名称等信息；
#
[handler_consoleHandler]
class=StreamHandler
args=(sys.stdout,)
level=DEBUG
formatter=simpleFormatter

[handler_fileHandler]
class=FileHandler
args=('file_log.log', 'a')
level=DEBUG
formatter=simpleFormatter

[handler_testHandler]
class=StreamHandler
args=(sys.stdout,)
level=DEBUG
formatter=testFormatter

# 使用TimedRotatingFileHandler 设置日志记录滚动
# "M" 记录周期是一分钟
# 1 日志滚动的间隔为 M*1
# 3 日志备份的数据
# 'UTF-8' 日志的编码格式
[handler_testTimedRotatingFileHandler]
class=logging.handlers.TimedRotatingFileHandler
args=('file_log2.log', 'M', 1, 3, 'UTF-8')
level=DEBUG
formatter=testFormatter

[formatter_simpleFormatter]
format=%(asctime)s %(threadName)s %(filename)s[line:%(lineno)-4d] %(levelname)-10s %(message)s
datefmt=%Y-%m-%d %H:%M:%S

[formatter_testFormatter]
format=%(asctime)s %(name)s %(threadName)s %(filename)s[line:%(lineno)-4d] %(levelname)-10s %(message)s
datefmt=%Y-%m-%d %H:%M:%S